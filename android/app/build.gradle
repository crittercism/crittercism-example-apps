apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.crittercism"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 5
        versionName "5.3.1"
    }

    buildTypes {
        ndkDebug {
            debuggable true
            //minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        ndkRelease {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
      abortOnError false
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'

    debugCompile 'com.crittercism:crittercism-android-agent:5.0.6'
    releaseCompile 'com.crittercism:crittercism-android-agent:5.0.6'
    ndkDebugCompile 'com.crittercism:crittercism-android-ndk-agent:5.0.6'
    ndkReleaseCompile 'com.crittercism:crittercism-android-ndk-agent:5.0.6'

    compile 'com.squareup.okhttp:okhttp:2.2.0'
}

task ndkBuild(type: Exec) {
    commandLine "${android.plugin.getNdkFolder().getAbsolutePath()}/ndk-build", '-C', file('src/main').absolutePath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}
